plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.android.extensions'
    id 'com.huawei.agconnect'
    id 'dagger.hilt.android.plugin'
}

ext {
    // We are using BUILD_ENVIRONMENT into AppBuildConfig
    BUILD_ENVIRONMENT = "BUILD_ENVIRONMENT"
    DATA_TYPE_FOR_BUILD_ENVIRONMENT = "int"
    QA_ENV = "1"
    PROD_ENV = "2"
}

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdk rootProject.compileSdkVersion

    defaultConfig {
        applicationId "eg.com.letsplant"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode buildVersionCode()
        versionName buildVersionName()

        signingConfig signingConfigs.debug

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

//    signingConfigs {
//        signedAPK {
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//            storeFile rootProject.file(keystoreProperties['storeFile'])
//            storePassword keystoreProperties['storePassword']
//        }
//    }

    buildTypes {
        debug {
            testCoverageEnabled = true
//            applicationIdSuffix '.qa'
            buildConfigField(DATA_TYPE_FOR_BUILD_ENVIRONMENT, BUILD_ENVIRONMENT, QA_ENV)
            //todo: add firebase topic
            buildConfigField 'String', 'FIREBASE_TOPIC', '"lets-plant-all-customers-qa"'
            buildConfigField 'String', 'STORE', '"qa"'
//            signingConfig signingConfigs.signedAPK
            shrinkResources false
            minifyEnabled false
//            FirebasePerformance {
//                // Set this flag to 'false' to disable @AddTrace annotation processing and
//                // automatic HTTP/S network request monitoring
//                // for a specific build variant at compile time.
//                instrumentationEnabled false
//            }
        }
        release {
            buildConfigField(DATA_TYPE_FOR_BUILD_ENVIRONMENT, BUILD_ENVIRONMENT, PROD_ENV)
            buildConfigField 'String', 'FIREBASE_TOPIC', '"lets-plant-all-customers"'
            buildConfigField 'String', 'STORE', '"production"'
            debuggable false
            shrinkResources false
            // Enable R8 for the build type.
            minifyEnabled true
            // Supply the configuration detailed below.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.signedAPK
        }
    }

    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }

    flavorDimensions 'services'

    productFlavors {
        google {
            dimension 'services'
            buildConfigField 'String', 'STORE', '"google_play"'
        }
        huawei {
            dimension 'services'
            buildConfigField 'String', 'STORE', '"huawei_app_gallery"'
        }
    }
}

dependencies {
    // App Dependencies
    implementation "androidx.core:core-ktx:$androidXCoreVersion"
    implementation "androidx.appcompat:appcompat:$androidAppCompatVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintVersion"
    implementation "androidx.annotation:annotation:$androidXAnnotations"
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Firebase
    implementation 'com.google.firebase:firebase-messaging:23.1.1'
    implementation 'com.google.firebase:firebase-auth-ktx:21.1.0'
    implementation 'com.google.android.gms:play-services-analytics:18.0.2'

    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:30.3.1')

    // Architecture Components
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$archLifecycleVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "androidx.work:work-runtime-ktx:2.7.1"


    // Add the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-database-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'

    // Huawei
    huaweiImplementation 'com.huawei.agconnect:agconnect-core:1.7.2.300'
    huaweiImplementation 'com.huawei.agconnect:agconnect-appmessaging:1.5.2.300'
    huaweiImplementation 'com.huawei.agconnect:agconnect-crash:1.7.2.300'
    huaweiImplementation 'com.huawei.hms:push:6.1.0.300'
    huaweiImplementation 'com.huawei.hms:hianalytics:6.7.0.300'

    // Hilt
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"

    //Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'

    // Lingver is a library to manage your application locale and language
    implementation "com.github.YarikSOffice:lingver:1.3.0"

    // Room DB
    implementation("androidx.room:room-ktx:$roomVersion")
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    // Testing
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
}
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.android.extensions'
    id 'com.huawei.agconnect'
}

ext {
    // We are using BUILD_ENVIRONMENT into AppBuildConfig
    BUILD_ENVIRONMENT = "BUILD_ENVIRONMENT"
    DATA_TYPE_FOR_BUILD_ENVIRONMENT = "int"
    QA_ENV = "1"
    PROD_ENV = "2"
}

//// Create a variable called keystorePropertiesFile, and initialize it to your
//// keystore.properties file, in the rootProject folder.
//def keystorePropertiesFile = rootProject.file("keystore.properties")
//
//// Initialize a new Properties() object called keystoreProperties.
//def keystoreProperties = new Properties()
//
//// Load your keystore.properties file into the keystoreProperties object.
//keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdk 33

    defaultConfig {
        applicationId "eg.com.letsplant"
        minSdk 23
        targetSdk 33
        versionCode buildVersionCode()
        versionName buildVersionName()

        signingConfig signingConfigs.debug

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

//    signingConfigs {
//        signedAPK {
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//            storeFile rootProject.file(keystoreProperties['storeFile'])
//            storePassword keystoreProperties['storePassword']
//        }
//    }

    buildTypes {
        debug {
            testCoverageEnabled = true
//            applicationIdSuffix '.qa'
            buildConfigField(DATA_TYPE_FOR_BUILD_ENVIRONMENT, BUILD_ENVIRONMENT, QA_ENV)
            //todo: add firebase
//            buildConfigField 'String', 'FIREBASE_TOPIC', '"ke-all-customers-qa"'
//            buildConfigField 'String', 'STORE', '"google_play"'
//            signingConfig signingConfigs.signedAPK
            shrinkResources false
            minifyEnabled false
//            FirebasePerformance {
//                // Set this flag to 'false' to disable @AddTrace annotation processing and
//                // automatic HTTP/S network request monitoring
//                // for a specific build variant at compile time.
//                instrumentationEnabled false
//            }
        }
        //todo: undo minifyEnabled --
        release {
            buildConfigField(DATA_TYPE_FOR_BUILD_ENVIRONMENT, BUILD_ENVIRONMENT, PROD_ENV)
//            buildConfigField 'String', 'FIREBASE_TOPIC', '"ke-all-customers"'
//            buildConfigField 'String', 'STORE', '"google_play"'
            debuggable false
            shrinkResources false
            // Enable R8 for the build type.
            minifyEnabled false
            // Supply the configuration detailed below.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.signedAPK
        }
    }

    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }

    flavorDimensions 'services'

    productFlavors {
        google {
            dimension 'services'
            buildConfigField 'String', 'STORE', '"google_play"'
        }
        huawei {
            dimension 'services'
            buildConfigField 'String', 'STORE', '"huawei_app_gallery"'
        }
    }
}

dependencies {
    //todo: group version variables
    implementation "androidx.core:core-ktx:1.9.0"
    implementation "androidx.appcompat:appcompat:1.5.1"
    implementation "com.google.android.material:material:1.7.0"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    implementation "androidx.annotation:annotation:$annotation_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.preference:preference-ktx:$preference_version"
    implementation 'com.google.firebase:firebase-messaging:23.1.1'
    implementation 'com.google.firebase:firebase-auth-ktx:21.1.0'
    implementation 'com.google.android.gms:play-services-analytics:18.0.2'
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"


    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:30.3.1')

    // Add the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-database-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'

    // Huawei
    huaweiImplementation 'com.huawei.agconnect:agconnect-core:1.7.2.300'
    huaweiImplementation 'com.huawei.agconnect:agconnect-appmessaging:1.5.2.300'
    huaweiImplementation 'com.huawei.agconnect:agconnect-crash:1.7.2.300'
    huaweiImplementation 'com.huawei.hms:push:6.1.0.300'
    huaweiImplementation 'com.huawei.hms:hianalytics:6.7.0.300'

    // Dagger Android #https://github.com/iammert/dagger-android-injection
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    // if you use the support libraries
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    implementation 'com.squareup.picasso:picasso:2.71828'

    // Lingver is a library to manage your application locale and language
    implementation "com.github.YarikSOffice:lingver:1.3.0"

    // Room DB
    implementation("androidx.room:room-ktx:$room_version")
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // work manager
    implementation "androidx.work:work-runtime-ktx:2.7.1"

//    implementation 'com.android.support:multidex:2.0.1'
//    implementation "androidx.core:core-ktx:+"
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}

//todo: handle versioning